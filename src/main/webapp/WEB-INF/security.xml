<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<!-- <intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" /> -->
		<intercept-url pattern="/account**" access="hasRole('ROLE_TEACHER')" />
		<intercept-url pattern="/createquiz/**" access="hasRole('ROLE_TEACHER')" />
		<intercept-url pattern="/createcourse**" access="hasRole('ROLE_TEACHER')" />
		<intercept-url pattern="/teacherDashboard**" access="hasRole('ROLE_TEACHER')" />
		<intercept-url pattern="/aboutcourse/**" access="isAuthenticated()" />
		<form-login login-page="/login.html" />
		<logout logout-url="/logout" />
		<remember-me key="offersAppKey" />
	</http>

	<authentication-manager>
		<authentication-provider>

			<password-encoder hash="bcrypt" />

			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select users.username, role.name from users
											   join users_role on users.id = users_role.users_id
											   join role on users_role.roles_id = role.id
											   where users.username = ?"
				users-by-username-query="select username,password,enabled from users where username = ?" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>